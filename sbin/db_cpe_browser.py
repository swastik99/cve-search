#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Importing CPE entries in a Redis database to improve lookup
#
# Until now, this part is only used by the web interface to improve response time
#
# Software is free software released under the "GNU Affero General Public License v3.0"
#
# Copyright (c) 2014-2018  Alexandre Dulaunoy - a@foo.be
# Copyright (c) 2014-2018  Pieter-Jan Moreels - pieterjan.moreels@gmail.com

import argparse
# Imports
import os
import sys

runPath = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(runPath, ".."))

from lib.Config import Configuration
import lib.DatabaseLayer as db

argParser = argparse.ArgumentParser(description='CPE entries importer in Redis cache')
argParser.add_argument('-v', action='store_true', default=False, help='Verbose logging')
argParser.add_argument('-o', action='store_true', default=False, help='Import cpeother database in Redis cache')
args = argParser.parse_args()

if args.o:
    cpe = db.getAlternativeCPEs()
else:
    cpe = db.getCPEs()

try:
    r = Configuration.getRedisVendorConnection()
except:
    sys.exit(1)

for e in cpe:

    value = e['cpe_2_2']
    (prefix, cpeversion, cpetype, vendor, product, version) = value.split(':', 5)
    if args.v:
        print("prefix: {}".format(prefix))
        print("cpetype: {}".format(cpetype))
        print("vendor: {} ".format(vendor))
        print("product: {} ".format(product))
        print("version: {}".format(version))

    r.sadd("prefix:" + prefix, cpetype)
    r.sadd(cpetype, vendor)
    r.sadd("v:" + vendor, product)
    if version:
        r.sadd("p:" + product, version)
